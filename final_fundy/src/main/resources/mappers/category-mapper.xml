<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="category">

	<select id="selectAll" resultType="category">
		SELECT * FROM MAJORCATEGORY order by majorcode
	</select>
	
	<select id="selectAllMid" resultType="category">
		select majorCode, majorname, midcode, midname from majorCategory join midCategory using (majorCode) order by midcode
	</select>
	
	<select id="selectAllMinor" resultType="category">
		select * from (select majorCode, majorname, midcode, midname from majorCategory join midCategory using (majorCode)) join minorCategory using (midCode) order by minorcode
	</select>
	
	<select id="selectProjectList" parameterType="map" resultType="map">
		select * from (select rownum rn, a.* 
						from (select projectno, membernick, midcode, projectthumnail, projecttitle, 
								projectcontent, substr(enddate-sysdate, 9, 2) as remaindate, 
								enddate, projectsumary, goalprice, 
								nvl(reach, 0) reach, 
								nvl(round(reach/goalprice*100), 0) reachrate, 
								nvl(funderno, 0) as funderno, 
								projectstatcode 
							from project
						    join member using(memberemail)
						    join minorcategory using (minorcode)
						    join midcategory using(midcode)
						    join majorcategory using(majorcode)
						    left outer join (select fundinglog.projectno, 
						    					sum(nvl(extramoney, 0)) + sum(nvl(packageamount, 0)*nvl(fundprice, 0)) as reach, 
						    					count(fundinglogno) as funderno 
						    				from fundinglog 
						    				join fundingoption using (packageno) 
						    				group by fundinglog.projectno) using(projectno) 
						    				where majorcode=#{majorCode} AND projectstatcode='PS03' AND midcode=#{midCategory} 
						    				order by funderno desc, enddate asc) a) 
	    where rn between 1 and 4
	</select>
	
	<select id="selectEditorProjectList" parameterType="map" resultType="map">
		select * from project join member using(memberemail) where recommended='Y' OR recommended='y'
	</select>
	
	<select id="selectNewSoonProjectList" parameterType="map" resultType="map">
		select * from (select rownum rn, a.* 
						from (select projectno, membernick, midcode, projectthumnail, projecttitle, 
								projectcontent, substr(enddate-sysdate, 9, 2) as remaindate, 
								enddate, projectsumary, goalprice, 
								nvl(reach, 0) reach, 
								nvl(round(reach/goalprice*100), 0) reachrate, 
								nvl(funderno, 0) as funderno, 
								projectstatcode 
							from project
						    join member using(memberemail)
						    join minorcategory using (minorcode)
						    join midcategory using(midcode)
						    join majorcategory using(majorcode)
						    left outer join (select fundinglog.projectno, 
						    					sum(nvl(extramoney, 0)) + sum(nvl(packageamount, 0)*nvl(fundprice, 0)) as reach, 
						    					count(fundinglogno) as funderno 
						    				from fundinglog 
						    				join fundingoption using (packageno) 
						    				group by fundinglog.projectno) using(projectno) 
						    				where majorcode=#{majorCode} AND projectstatcode='PS03' 
						    				order by <choose>
														<when test="condition == 'new'">begindate desc</when>
														<when test="condition == 'soon'">enddate asc</when>
													</choose>) a) 
	    where rn between 1 and 4
	</select>

</mapper>
