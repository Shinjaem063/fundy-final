<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="project">
	
	<insert id="insertOne" parameterType="project">
		INSERT INTO PROJECT VALUES(PROJECT_SEQ.NEXTVAL, #{projectThumnail}, #{projectTitle}, #{projectContent}, #{beginDate}, #{endDate}, #{goalPrice}, 'N', NULL, #{anchorCount}, #{projectStatCode}, #{projectSumary}, #{projectEmail}, #{projectPhone}, #{memberEmail}, #{minorCode}, #{projectFormDate})
		<selectKey keyProperty="projectNo" resultType="int" order="AFTER" keyColumn="projectNo">
			SELECT PROJECT_SEQ.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<insert id="insertFundingOp" parameterType="fundingOption">
		INSERT INTO FUNDINGOPTION VALUES(FUNDINGOPTION_SEQ.NEXTVAL, #{projectNo}, #{fundPrice}, #{deliveryDate})
		<selectKey keyProperty="packageNo" resultType="int" order="AFTER" keyColumn="packageNo">
			SELECT FUNDINGOPTION_SEQ.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<insert id="insertOptionDetail" parameterType="optionDetail">
		INSERT INTO OPTIONDETAIL VALUES(OPTIONDETAIL_SEQ.NEXTVAL, #{packageNo}, #{packageName}, #{packageAmount})
	</insert>
	
	<select id="selectCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
			FROM PROJECT A 
			JOIN MINORCATEGORY B ON A.MINORCODE = B.MINORCODE
			JOIN MIDCATEGORY C ON B.MIDCODE = C.MIDCODE
			WHERE 1=1
		<if test="projectStatCode != null and projectStatCode != ''">
			AND A.PROJECTSTATCODE = #{projectStatCode}
		</if>
		<if test="majorCode != null and majorCode != ''">
			AND C.MAJORCODE = #{majorCode}
		</if>
		<if test="midCode != null and midCode != ''">
			AND C.MIDCODE = #{midCode}
		</if>
		<if test="keyword != null and keyword != ''">
			AND A.PROJECTTITLE LIKE '%'||#{keyword}||'%' 
		</if>
		<if test="memberEmail != null and memberEmail != ''">
			AND A.MEMBEREMAIL = #{memberEmail}
		</if>
	</select>
	
	<select id="selectList" parameterType="map" resultType="project">
		SELECT A.*, B.MINORNAME, C.*, 
			F.MEMBERNICK,
			G.PROJECTSTATNAME,
			nvl((select sum((e.fundPrice*d.packageamount)+d.extramoney) from fundinglog d join fundingoption e on d.packageNo = e.packageNo where d.projectNo = a.projectNo),0) as reach,
			nvl((select sum((e.fundPrice*d.packageamount)+d.extramoney) from fundinglog d join fundingoption e on d.packageNo = e.packageNo where d.projectNo = a.projectNo)/goalprice*100,0) as reachRate,
			nvl((select count(*) from fundinglog f where f.projectNo = a.projectNo),0) as funderNo
			FROM PROJECT A 
			JOIN MINORCATEGORY B ON A.MINORCODE = B.MINORCODE
			JOIN MIDCATEGORY C ON B.MIDCODE = C.MIDCODE
			JOIN MEMBER F ON A.MEMBEREMAIL = F.MEMBEREMAIL
			JOIN PROJECTSTATUS G ON A.PROJECTSTATCODE = G.PROJECTSTATCODE
			WHERE 1=1
		<if test="projectStatCode != null and projectStatCode != ''">
			AND A.PROJECTSTATCODE = #{projectStatCode}
		</if>
		<if test="majorCode != null and majorCode != ''">
			AND C.MAJORCODE = #{majorCode}
		</if>
		<if test="midCode != null and midCode != ''">
			AND C.MIDCODE = #{midCode}
		</if>
		<if test="keyword != null and keyword != ''">
			AND A.PROJECTTITLE LIKE '%'||#{keyword}||'%' 
		</if>
		<if test="memberEmail != null and memberEmail != ''">
			AND A.MEMBEREMAIL = #{memberEmail}
		</if>
		<if test="orderby != null and orderby != ''">
			ORDER BY ${orderby} DESC
		</if>
		
	</select>
	
	<select id="selectOne" parameterType="map" resultType="project">
		SELECT A.*, B.MINORNAME, C.*, D.MEMBERPROFILE,
			<if test="memberEmail != null">
			(SELECT COUNT(*) FROM FAVORITE WHERE MEMBEREMAIL = #{memberEmail} AND PROJECTNO = #{projectNo}) as favorited,
			</if>
			nvl((select sum((e.fundPrice*d.packageamount)+d.extramoney) from fundinglog d join fundingoption e on d.packageNo = e.packageNo where d.projectNo = a.projectNo),0) as reach,
			nvl((select sum((e.fundPrice*d.packageamount)+d.extramoney) from fundinglog d join fundingoption e on d.packageNo = e.packageNo where d.projectNo = a.projectNo)/goalprice*100,0) as reachRate,
			nvl((select count(*) from fundinglog f where f.projectNo = a.projectNo),0) as funderNo
		FROM PROJECT A
		JOIN MINORCATEGORY B ON A.MINORCODE = B.MINORCODE
		JOIN MIDCATEGORY C ON B.MIDCODE = C.MIDCODE
		JOIN MEMBER D ON A.MEMBEREMAIL = D.MEMBEREMAIL
		WHERE A.PROJECTNO = #{projectNo}
	</select>
	
	<select id="selectFunderList" parameterType="int" resultType="fundingLog">
		SELECT A.*, 
		(SELECT B.FUNDPRICE FROM FUNDINGOPTION B WHERE B.PACKAGENO = A.PACKAGENO) AS FUNDPRICE,
		C.MEMBERNICK,
		C.MEMBERPROFILE
		FROM FUNDINGLOG A
		JOIN MEMBER C ON C.MEMBEREMAIL = A.MEMBEREMAIL
		WHERE PROJECTNO = #{projectNo}
		ORDER BY FUNDERDATE DESC
	</select>
	
	<select id="selectFundingOptionList" parameterType="int" resultType="fundingOption">
		SELECT A.*, (SELECT COUNT(*) FROM FUNDINGLOG B WHERE A.PACKAGENO = B.PACKAGENO) AS FUNDERNO FROM FUNDINGOPTION A WHERE PROJECTNO = #{projectNo} order by fundPrice ASC
	</select>
	
	<select id="selectOptionDetailList" parameterType="int" resultType="optionDetail">
		SELECT * FROM OPTIONDETAIL WHERE PACKAGENO = #{packageNo} order by optiondetailno
	</select>
	
	<select id="projectCount" parameterType="string" resultType="int">
     	select count(*) from project where memberEmail=#{memberEmail} and projectStatCode='PS03'
  	</select>
  	
  	<select id="myDonationCount" parameterType="map" resultType="int">
  		SELECT count(*) FROM FUNDINGLOG A
  		JOIN PROJECT B ON A.PROJECTNO = B.PROJECTNO
  		WHERE A.MEMBEREMAIL = #{memberEmail}
  	</select>
  	
  	<select id="myDonationList" parameterType="map" resultType="myDonation">
  		SELECT A.PROJECTNO, A.PACKAGEAMOUNT, A.EXTRAMONEY, A.FUNDERDATE, B.PROJECTTITLE, B.PROJECTTHUMNAIL, B.ENDDATE, C.PROJECTSTATNAME, D.FUNDPRICE 
  		FROM FUNDINGLOG A
  		JOIN PROJECT B ON A.PROJECTNO = B.PROJECTNO
  		JOIN PROJECTSTATUS C ON B.PROJECTSTATCODE = C.PROJECTSTATCODE
  		JOIN FUNDINGOPTION D ON B.PROJECTNO = D.PROJECTNO
  		WHERE A.MEMBEREMAIL = #{memberEmail}
  	</select>
	
</mapper>
