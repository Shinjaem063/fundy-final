<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="projectWrite">
	<select id="selectMinorCategorys" resultType="category" parameterType="string">
		select * from (select majorCode, majorname, midcode, midname from majorCategory join midCategory using (majorCode)) join minorCategory using (midCode) where majorCode=#{majorCategory} order by minorcode
	</select>
	
	<select id="selectMidCategorys" resultType="category">
		select majorCode, majorname, midcode, midname from majorCategory join midCategory using (majorCode) where majorCode=#{majorCategory} order by midcode
	</select>
	
	<select id="selectMember" parameterType="string" resultType="member">
		select * from member where memberEmail=#{memberEmail}
	</select>
	
	<select id="selectProjectNo" resultType="_int">
		select project_seq.currval from dual
	</select>
	
	<select id="selectProfileImage" resultType="string">
		SELECT MEMBERPROFILE FROM MEMBER WHERE MEMBEREMAIL=#{memberEmail}
	</select>
	
	<select id="selectThumnail" resultType="string">
		SELECT PROJECTTHUMNAIL FROM PROJECT WHERE PROJECTNO=#{projectNo}
	</select>
	
	<select id="selectPackageNo" resultType="map">
		SELECT PACKAGENO FROM FUNDINGOPTION WHERE PROJECTNO=${projectNo}
	</select>
	
	<select id="projectWritedCnt" parameterType="string" resultType="_int">
		SELECT count(*) FROM PROJECT WHERE MEMBEREMAIL=#{memberEmail} AND (PROJECTSTATCODE IS NULL OR PROJECTSTATCODE='PS01')
	</select>
	
	<select id="selectSavedProjectNo" parameterType="string" resultType="_int">
		SELECT PROJECTNO FROM (SELECT ROWNUM AS RN, PROJECTNO FROM PROJECT WHERE MEMBEREMAIL=#{memberEmail} AND (PROJECTSTATCODE IS NULL OR PROJECTSTATCODE='PS01') order by projectno desc) WHERE RN=1
	</select>
	
	<select id="selectProjectPreview" parameterType="int" resultType="project">
		SELECT A.*, B.MINORNAME, C.*, D.MEMBERPROFILE, D.MEMBERNICK,
			nvl((select sum((e.fundPrice*d.packageamount)+d.extramoney) from fundinglog d join fundingoption e on d.packageNo = e.packageNo where d.projectNo = a.projectNo),0) as reach,
			nvl((select sum((e.fundPrice*d.packageamount)+d.extramoney) from fundinglog d join fundingoption e on d.packageNo = e.packageNo where d.projectNo = a.projectNo)/goalprice*100,0) as reachRate,
			nvl((select count(*) from fundinglog f where f.projectNo = a.projectNo),0) as funderNo
		FROM PROJECT A
		LEFT OUTER JOIN MINORCATEGORY B ON A.MINORCODE = B.MINORCODE
		LEFT OUTER JOIN MIDCATEGORY C ON B.MIDCODE = C.MIDCODE
		LEFT OUTER JOIN MEMBER D ON A.MEMBEREMAIL = D.MEMBEREMAIL
		WHERE A.PROJECTNO = #{projectNo}
	</select>
	
	<insert id="insertProject" parameterType="string">
		INSERT INTO PROJECT VALUES(PROJECT_SEQ.NEXTVAL, null, null, null, SYSDATE, null, null, null, null, 0, null, null, null, null, #{memberEmail}, null, null)
	</insert>
	
	<insert id="insertProjectImageSrc" parameterType="map">
		INSERT INTO PROJECTIMAGE VALUES(${projectNo}, #{reNameFile}, #{oriFileName})
	</insert>
	
	<insert id="insertProjectAccount" parameterType="map">
		INSERT INTO PROJECTACCOUNT VALUES(${projectNo}, #{bank}, #{accNum}, #{accName})
	</insert>
	
	<insert id="insertReward" parameterType="map">
		INSERT INTO FUNDINGOPTION VALUES(FUNDINGOPTION_SEQ.NEXTVAL, ${projectNo}, #{rewardMoney}, #{deliDay})
	</insert>
	
	<insert id="insertOptionDetail" parameterType="map">
		INSERT INTO OPTIONDETAIL VALUES(FUNDINGOPTION_SEQ.CURRVAL, #{rewardName}, #{rewardCnt}, OptionDetail_SEQ.NEXTVAL)
	</insert>
	
	<update id="updateThumnail" parameterType="map">
		UPDATE PROJECT SET PROJECTTHUMNAIL=#{reNameFile} WHERE PROJECTNO=${projectNo}
	</update>
	
	<update id="updateProfileImage" parameterType="map">
		UPDATE MEMBER SET MEMBERPROFILE=#{reNameFile} WHERE MEMBEREMAIL=#{memberEmail}
	</update>
	
	<update id="updateTempSaveProject" parameterType="map">
		UPDATE PROJECT SET MINORCODE=#{minorCode}, PROJECTTITLE=#{projectTitle}, PROJECTSUMARY=#{projectSumary}, 
		GOALPRICE=${goalPrice}, ENDDATE=#{endDate}, PROJECTCONTENT=#{projectContent}, PROJECTEMAIL=#{projectEmail},
		PROJECTPHONE=#{projectPhone}, PROJECTSTATCODE='PS01', PROJECTFORMDATE=SYSDATE
		WHERE PROJECTNO=${projectNo}
	</update>
	
	<update id="updateProjectAccount" parameterType="map">
		UPDATE PROJECTACCOUNT SET BANK=#{bank}, ACCOUNTNO=${accNum}, ACCOUNTOWNER=#{accName} WHERE PROJECTNO=${projectNo}
	</update>
	
	<update id="updateEntryProject" parameterType="_int">
		UPDATE PROJECT SET PROJECTSTATCODE='PS02' WHERE PROJECTNO=#{projectNo}
	</update>
	
	<delete id="deleteProjectAccount" parameterType="map">
		DELETE FROM PROJECTACCOUNT WHERE PROJECTNO=${projectNo}
	</delete>
	
	<delete id="deleteOptionDetail" parameterType="map">
		delete from (select * 
					from fundingoption fo, optiondetail od 
					where fo.packageno=od.packageno) 
				where projectno = (select distinct projectno 
									from fundingoption fo, optiondetail od 
									where fo.packageno=od.packageno and projectno=${projectNo})
	</delete>
	
	<delete id="deleteOption" parameterType="map">
		delete from fundingoption where projectno=${projectNo}
	</delete>
	
</mapper>
